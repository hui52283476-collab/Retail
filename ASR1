import os
os.environ['OPENROUTER_API_KEY'] = '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'
import requests # Colab 內建，自動 UTF-8
import os

def llm_summarize(transcription, llm_model='x-ai/grok-4-fast:free'): # 免費模型
 api_key = os.environ.get('OPENROUTER_API_KEY')
 if not api_key:
 print("API key 失敗！")
 return "失敗"

 url = "https://openrouter.ai/api/v1/chat/completions"
 prompt = f"""
請用中文摘要以下內容，重點主要事件、人物、結論，控制在100字內。用 bullet points。
原文：{transcription}
"""

 data = {
 "model": llm_model,
 "messages": [{"role": "user", "content": prompt}],
 "max_tokens": 150
 }

 headers = {
 "Authorization": f"Bearer {api_key}",
 "Content-Type": "application/json"
 }

 try:
 response = requests.post(url, json=data, headers=headers) # json= 自動 dumps + UTF-8
 response.raise_for_status()
 result = response.json()
 summary = result['choices'][0]['message']['content'].strip()
 print(f"摘要結果：\n{summary}")
 return summary
 except requests.exceptions.RequestException as e:
 print(f"請求錯誤：{e}")
 return "失敗"
 except Exception as e:
 print(f"其他錯誤：{e}")
 return "失敗"

# 測試
test_transcription = "這是一段測試 ASR 轉錄文字。老師講了 ASR 工具和 LLM 摘要的組合測試。重點是 pipeline，從音頻到摘要，不用 WER，只看品質。用了 2 個 ASR 和人類轉錄作為參考。"
print(f"測試 transcript：{test_transcription}")

summary = llm_summarize(test_transcription)
with open('/content/summary.txt', 'w', encoding='utf-8') as f:
 f.write(f"測試原文：\n{test_transcription}\n\n摘要：\n{summary}")
print("完成！下載 summary.txt")
